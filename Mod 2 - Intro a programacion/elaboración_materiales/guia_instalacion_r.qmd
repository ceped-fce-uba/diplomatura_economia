---
title: "Guía Completa de Instalación: R y RStudio"
subtitle: "Herramientas esenciales para análisis de datos"
author: "Tu Nombre"
date: today
date-format: "DD [de] MMMM [de] YYYY"
lang: es

# Configuración para usar Typst como motor de renderizado
format:
  typst:
    # Opciones generales
    toc: true
    number-sections: true
    # Opciones de Typst para la página
    margin:
      x: 2cm
      y: 2cm
    # Configuración de fuentes (basado en tu SCSS)
    fontsize: 11pt
    mainfont: Lato
    sansfont: Montserrat
    monofont: "Fira Code"
    # Estilo personalizado de Typst
    template: |
      // Configuración de colores basados en tu SCSS
      #let primary-color = rgb("#0d395f")
      #let link-color = rgb("#0e6aa5")
      #let bg-color = rgb("#ffffff")
      #let text-color = rgb("#363636")
      #let code-bg = rgb("#f8f9fa")
      #let code-color = rgb("#d63384")
      #let callout-note = rgb("#0090e9")
      #let callout-tip = rgb("#02b875")
      #let callout-warning = rgb("#ff6700")
      #let callout-important = rgb("#d9534f")
      
      // Configuración del documento
      #set text(font: "Lato", size: 11pt, fill: text-color)
      #set par(justify: true, leading: 0.8em)
      #set heading(font: "Montserrat", fill: primary-color)
      #set link(fill: link-color)
      
      // Configuración de bloques de código
      #set raw(block: true, fill: code-bg, radius: 4pt)
      #set raw(block: false, fill: rgb("#f5f5f5"), radius: 2pt)
      
      // Estilos personalizados para callouts
      #let note(body) = block(
        fill: rgb("#e9f5ff"),
        inset: 1em,
        radius: 4pt,
        stroke: (left: 4pt + callout-note),
        width: 100%,
      )[
        #text(fill: callout-note, weight: "bold")[Nota: ]#body
      ]
      
      #let tip(body) = block(
        fill: rgb("#e6f9f0"),
        inset: 1em,
        radius: 4pt,
        stroke: (left: 4pt + callout-tip),
        width: 100%,
      )[
        #text(fill: callout-tip, weight: "bold")[Consejo: ]#body
      ]
      
      #let warning(body) = block(
        fill: rgb("#fff5eb"),
        inset: 1em,
        radius: 4pt,
        stroke: (left: 4pt + callout-warning),
        width: 100%,
      )[
        #text(fill: callout-warning, weight: "bold")[Advertencia: ]#body
      ]
      
      #let important(body) = block(
        fill: rgb("#ffebeb"),
        inset: 1em,
        radius: 4pt,
        stroke: (left: 4pt + callout-important),
        width: 100%,
      )[
        #text(fill: callout-important, weight: "bold")[Importante: ]#body
      ]
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  warning = FALSE,
  message = FALSE,
  comment = "#>",
  fig.align = "center",
  fig.width = 7,
  fig.height = 5,
  out.width = "80%",
  dpi = 300
)
```

# Introducción

Esta guía te ayudará a instalar y configurar correctamente todo el entorno necesario para comenzar a trabajar con R y RStudio. Estas herramientas son fundamentales para el análisis de datos y la estadística.

::: {.callout-note}
Las herramientas que instalaremos son:

- **R**: Lenguaje de programación especializado en análisis estadístico y visualización de datos
- **RStudio**: Entorno de desarrollo integrado (IDE) que facilita el trabajo con R
:::

# Instalación de R

R es un lenguaje de programación y entorno de software libre para computación estadística y gráficos.

## Paso 1: Descargar R

1. Visita la página oficial del proyecto R: [https://cran.r-project.org/](https://cran.r-project.org/)
2. Selecciona tu sistema operativo:
   - **Windows**: Haz clic en "Download R for Windows" → "base" → "Download R-X.X.X for Windows" (donde X.X.X es la versión más reciente)
   - **macOS**: Haz clic en "Download R for macOS" → Selecciona la versión adecuada para tu Mac (Intel o Apple Silicon)
   - **Linux**: Haz clic en "Download R for Linux" y sigue las instrucciones para tu distribución

![Página de descarga de R](https://cran.r-project.org/Rlogo.svg){width=50% fig-align="center"}

## Paso 2: Instalar R

### En Windows
1. Ejecuta el archivo descargado (`.exe`)
2. Sigue el asistente de instalación aceptando las opciones predeterminadas
3. Haz clic en "Finalizar" cuando termine la instalación

### En macOS
1. Abre el archivo `.pkg` descargado
2. Sigue el asistente de instalación
3. Arrastra R a la carpeta de Aplicaciones si es necesario

### En Linux (Ubuntu/Debian)
Abre una terminal y ejecuta los siguientes comandos:

```bash
# Añadir el repositorio
sudo apt update
sudo apt install r-base r-base-dev
```

::: {.callout-tip}
Se recomienda utilizar la versión más reciente de R, actualmente la 4.3.x o superior, para aprovechar las mejoras de rendimiento y nuevas funcionalidades.
:::

# Instalación de RStudio

RStudio es un entorno de desarrollo integrado (IDE) para R, que proporciona una interfaz gráfica muy completa y útil.

## Paso 1: Descargar RStudio

1. Visita la página de descargas de Posit (anteriormente RStudio): [https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/)
2. Desplázate hacia abajo hasta la sección "Installers for Supported Platforms"
3. Selecciona el instalador apropiado para tu sistema operativo

![Logo de RStudio/Posit](https://d33wubrfki0l68.cloudfront.net/1ac3f0e3753f18c7e2a8893957d1841fba1e3d08/48a33/assets/images/posit-logo-fullcolor-TM.svg){width=50% fig-align="center"}

## Paso 2: Instalar RStudio

1. Ejecuta el archivo descargado
2. Sigue las instrucciones del instalador
3. Una vez completada la instalación, puedes iniciar RStudio desde el menú de inicio, el dock o el lanzador de aplicaciones, dependiendo de tu sistema operativo

## Paso 3: Verificar la instalación

1. Abre RStudio
2. Confirma que se muestra la consola de R en uno de los paneles
3. Puedes probar ejecutando un comando simple como `2 + 2` en la consola

```{r, echo=TRUE, eval=FALSE}
# Prueba simple
2 + 2

# Verificar la versión instalada
R.version.string
```

# Instalación de paquetes esenciales

Los paquetes extienden la funcionalidad de R. Vamos a instalar algunos paquetes fundamentales para el análisis de datos.

## Tidyverse

Tidyverse es una colección de paquetes de R diseñados para ciencia de datos que comparten una filosofía de diseño común.

```{r, eval=FALSE}
# Instalar tidyverse
install.packages("tidyverse", dependencies = TRUE)

# Cargar tidyverse
library(tidyverse)
```

Este comando instala varios paquetes esenciales:

- **ggplot2**: Creación de gráficos
- **dplyr**: Manipulación de datos
- **tidyr**: Limpieza de datos
- **readr**: Importación de datos
- **purrr**: Programación funcional
- **tibble**: Marcos de datos modernos
- **stringr**: Manipulación de texto
- **forcats**: Trabajo con factores

## Paquetes adicionales recomendados

```{r, eval=FALSE}
# Paquetes para importación y exportación de datos
install.packages("openxlsx")     # Trabajo con archivos Excel
install.packages("foreign")      # Importar datos de SPSS, Stata, etc.
install.packages("haven")        # Alternativa moderna a foreign
install.packages("readxl")       # Leer archivos Excel

# Paquetes para visualización avanzada
install.packages("ggridges")     # Gráficos de densidad tipo "ridgeline"
install.packages("ggthemes")     # Temas adicionales para ggplot
install.packages("patchwork")    # Combinar múltiples gráficos

# Paquetes para reportes y publicación
install.packages("rmarkdown")    # Crear documentos dinámicos
install.packages("knitr")        # Motor de generación de informes
install.packages("kableExtra")   # Tablas avanzadas
install.packages("gt")           # Grammar of Tables

# Paquetes específicos
install.packages("eph")          # Trabajo con la Encuesta Permanente de Hogares
```

## Verificación de instalación de paquetes

Para comprobar que todos los paquetes se han instalado correctamente, ejecuta:

```{r, eval=FALSE}
# Cargar los paquetes principales
library(tidyverse)
library(openxlsx)
library(ggridges)
library(ggthemes)
library(foreign)
library(rmarkdown)
```

Si no hay mensajes de error, la instalación ha sido exitosa.

::: {.callout-warning}
Si al cargar un paquete obtienes un error como:

```
Error: package or namespace load failed for 'tidyverse' in loadNamespace(...)
There is no package called '[xxxxx]'
```

Esto indica que falta un paquete dependiente. Instálalo con:

```r
install.packages("[xxxxx]")
```

Y vuelve a intentar cargar el paquete original.
:::

# Instalación de Quarto

Quarto es un sistema de publicación científica y técnica de código abierto que permite crear documentos dinámicos.

## Paso 1: Descargar Quarto

1. Visita la página oficial de Quarto: [https://quarto.org/docs/get-started/](https://quarto.org/docs/get-started/)
2. Haz clic en el botón de descarga para tu sistema operativo

## Paso 2: Instalar Quarto

1. Ejecuta el instalador descargado
2. Sigue las instrucciones del asistente de instalación
3. Una vez completada la instalación, reinicia RStudio

## Paso 3: Verificar la instalación

1. Abre RStudio
2. Ve a File → New File → Quarto Document...
3. Si aparece el diálogo para crear un documento Quarto, la instalación ha sido exitosa

# Instalación de Typst (para renderizado PDF sin LaTeX)

Typst es un sistema moderno para la creación de documentos que puede usarse como alternativa a LaTeX para generar archivos PDF desde Quarto.

## Paso 1: Descargar e instalar Typst CLI

Para que Quarto pueda usar Typst como motor de renderizado, necesitas instalar Typst CLI:

1. Visita la página de releases de Typst en GitHub: [https://github.com/typst/typst/releases](https://github.com/typst/typst/releases)
2. Descarga la versión adecuada para tu sistema operativo:
   - **Windows**: Archivo `.zip` (ej. `typst-x86_64-pc-windows-msvc.zip`)
   - **macOS**: Archivo `.tar.gz` (ej. `typst-x86_64-apple-darwin.tar.gz` o `typst-aarch64-apple-darwin.tar.gz`)
   - **Linux**: Archivo `.tar.gz` (ej. `typst-x86_64-unknown-linux-musl.tar.gz`)

### En Windows

1. Descomprime el archivo `.zip` descargado
2. Copia el archivo `typst.exe` en una carpeta que esté en tu PATH (por ejemplo, `C:\Windows`)
3. Alternativamente, puedes añadir la ruta a la carpeta donde descomprimiste Typst a tu variable de entorno PATH

### En macOS y Linux

```bash
# Descomprimir el archivo descargado
tar -xzf typst-*.tar.gz

# Mover el binario a un directorio en tu PATH
sudo mv typst /usr/local/bin/
```

## Paso 2: Verificar la instalación de Typst

Abre una terminal o línea de comandos y ejecuta:

```bash
typst --version
```

Si ves la versión de Typst, la instalación ha sido exitosa.

::: {.callout-important}
Quarto requiere Typst versión 0.10.0 o superior para una correcta integración. Asegúrate de tener una versión compatible.
:::

# Creación de documentos PDF con Quarto y Typst

## Configuración básica

Para crear un documento Quarto que use Typst como motor de renderizado, usa la siguiente configuración YAML:

```yaml
---
title: "Mi Documento"
format: typst
---
```

## Configuración avanzada

Puedes personalizar el documento Typst con varias opciones:

```yaml
---
title: "Documento Personalizado"
format:
  typst:
    toc: true
    number-sections: true
    papersize: a4
    margin:
      x: 2.5cm
      y: 2.5cm
    fontsize: 11pt
    mainfont: Lato
    sansfont: Montserrat
    monofont: "Fira Code"
---
```

## Renderizado

1. En RStudio, abre tu archivo `.qmd`
2. Haz clic en el botón "Render" en la barra de herramientas
3. El documento se renderizará como un PDF usando Typst en lugar de LaTeX

::: {.callout-tip}
También puedes renderizar desde la línea de comandos con:

```bash
quarto render documento.qmd
```
:::

# Estilo y personalización avanzada con Typst

## Inclusión de plantillas personalizadas

Puedes incluir código Typst personalizado en tu documento Quarto usando la opción `template`:

```yaml
---
format:
  typst:
    template: |
      // Código de Typst personalizado aquí
      #let primary-color = rgb("#0d395f")
      #set heading(fill: primary-color)
      
      // Definición de funciones personalizadas
      #let custom-box(title, body) = block(
        fill: rgb("#f5f5f5"),
        radius: 4pt,
        width: 100%,
      )[
        #text(weight: "bold")[#title] #body
      ]
---
```

## Uso de archivos Typst externos

Para proyectos más complejos, puedes mantener tu estilo Typst en un archivo separado:

1. Crea un archivo `estilo.typ` con tus definiciones de estilo
2. Referencia este archivo en tu documento Quarto:

```yaml
---
format:
  typst:
    template: "estilo.typ"
---
```

# Recursos adicionales

## Documentación oficial

- [R Project](https://www.r-project.org/)
- [RStudio](https://posit.co/products/open-source/rstudio/)
- [Quarto](https://quarto.org/)
- [Typst](https://typst.app/docs/)
- [Integración Quarto-Typst](https://quarto.org/docs/output-formats/typst.html)

## Comunidad y ayuda

- [RStudio Community](https://community.rstudio.com/)
- [Stack Overflow - R](https://stackoverflow.com/questions/tagged/r)
- [Foro de Typst](https://typst.app/community/)

# Solución de problemas comunes

## Problemas con Typst

### Typst no se encuentra en el PATH

Si al renderizar un documento Quarto con formato Typst obtienes un error indicando que no se encuentra Typst:

1. Verifica que Typst está correctamente instalado ejecutando `typst --version` en una terminal
2. Asegúrate que la ubicación del binario de Typst está en la variable de entorno PATH
3. Reinicia RStudio para que reconozca los cambios en el PATH

### Fuentes no encontradas

Si tienes problemas con las fuentes en el documento PDF:

1. Asegúrate de que las fuentes especificadas están instaladas en tu sistema
2. Usa nombres de fuentes entre comillas en el YAML: `monofont: "Fira Code"`
3. Para mayor compatibilidad, considera usar fuentes del sistema o Google Fonts populares

## Ajuste del PATH en diferentes sistemas operativos

### Windows

1. Busca "Variables de entorno" en el menú de inicio
2. Haz clic en "Editar las variables de entorno del sistema"
3. Haz clic en "Variables de entorno..."
4. En la sección "Variables del sistema", encuentra y selecciona la variable "Path"
5. Haz clic en "Editar..."
6. Haz clic en "Nuevo" y añade la ruta a la carpeta donde se encuentra `typst.exe`
7. Haz clic en "Aceptar" en todas las ventanas

### macOS

Añade la siguiente línea a tu archivo `~/.zshrc` o `~/.bash_profile`:

```bash
export PATH=$PATH:/ruta/a/la/carpeta/de/typst
```

Luego ejecuta:

```bash
source ~/.zshrc  # o source ~/.bash_profile
```

### Linux

Añade la siguiente línea a tu archivo `~/.bashrc`:

```bash
export PATH=$PATH:/ruta/a/la/carpeta/de/typst
```

Luego ejecuta:

```bash
source ~/.bashrc
```

# Anexo: Glosario de términos

- **CRAN**: Comprehensive R Archive Network, repositorio oficial de paquetes de R
- **IDE**: Entorno de Desarrollo Integrado (Integrated Development Environment)
- **Paquete**: Extensión que añade funcionalidades específicas a R
- **Markdown**: Lenguaje de marcado ligero usado en Quarto
- **YAML**: Formato para definir metadatos en documentos Quarto
- **Chunk**: Bloque de código R embebido en un documento Quarto
- **Typst**: Sistema de composición de documentos alternativo a LaTeX
- **Renderizado**: Proceso de convertir un documento Quarto en su formato final (PDF, HTML, etc.)
