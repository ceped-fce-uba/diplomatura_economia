---
title: "Práctica con SIPA"
format:
  html:
    df-print: paged
    embed-resources: true
code-tools: false
toc: true
theme: 
  - styles.scss
---

# 1era Práctica

El presente documento HTML es una prueba para el material de la diplomatura **PROBLEMAS ACTUALES DE LA ECONOMÍA, EL EMPLEO Y EL COMERCIO**. El repositorio con todos los materiales en <https://github.com/ceped-fce-uba/diplomatura_economia>.

## Configuración

```{r}
#| label: setup
#| message: false
#| warning: false

library(tidyverse) # Nuestro querido tidyverse
library(plotly) # Para gráficos interactivos
library(DT)  # Para tablas interactivas
```

Para mostrar el funcionamiento básico de tidyverse, operaremos con bases del Sistema Integrado Previsional Argentino, seleccionando únicamente una serie de variables de interés:

-   Personas con empleo asalariado registrado en el sector privado, según provincia.
-   Personas con trabajo registrado según modalidad ocupacional principal.
-   Personas con trabajo registrado según modalidad ocupacional principal. Índice base 100 = Ene-12.
-   Remuneración de las personas con empleo asalariado registrado en el sector privado.

## Cargamos los datos

La función **read_csv** nos permite levantar los archivos de extensión ".csv". En inglés, comma separated values, o en criollo, valores separados por coma.

```{r}
#| label: load-data
#| warning: false

asal_reg_prov <- read_csv("../bases/asalariados_registrados_provincia.csv")
```

# AGREGAR REGIONES DE NUESTRO PAÍS

```{r}
# Probando filtros
asal_reg_santafe_2010 <- asal_reg_prov %>% 
  filter(Provincia == 'SANTA FE')

asal_reg_santafe_2010
```

## Gráficos

```{r}
library(tidyverse) # ya lo habíamos hecho, pero cargamos la librería tidyverse (que incorpora ggplot)
library(ggthemes) # diseños preconfigurados para los gráficos ggplot
```

### Ggplot2

`ggplot` tiene su sintaxis propia. La idea central es pensar los gráficos como una sucesión de capas, que se construyen una a la vez.

-   El operador + nos permite incorporar nuevas capas al gráfico.

-   El comando ggplot() nos permite definir la fuente de datos y las variables que determinaran los ejes del grafico (x,y), así como el color y la forma de las líneas o puntos,etc.

-   Las sucesivas capas nos permiten definir:

    -   Uno o más tipos de gráficos (de columnas, geom_col(), de línea, geom_line(), de puntos, geom_point(), boxplot, geom_boxplot())

    -   Títulos labs() Estilo del gráfico theme()

    -   Escalas de los ejes scale_y_continuous,scale_x_discrete

    -   División en subconjuntos facet_wrap(),facet_grid()

´ggplot\` tiene muchos comandos, y no tiene sentido saberlos de memoria, es siempre útil reutilizar gráficos viejos y tener a mano el machete.
