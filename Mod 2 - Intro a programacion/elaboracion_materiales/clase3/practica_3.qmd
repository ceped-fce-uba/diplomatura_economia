---
title: "Práctica 3"
author: "Diplomatura PAEEC - UBA"
output-file: "Guia Practica 3" 
format:
  html:
    embed-resources: true
    code-fold: true
    code-summary: "Mostrar respuesta"
    code-tools: false
    toc: true
    toc-location: left
    toc-title: Índice
    theme:
      light: ../assets/practica_claro.scss
      dark: ../assets/practica_oscuro.scss
    fig-width: 8
    fig-height: 5
    fig-format: retina
    warning: false
    message: false
    echo: true
    output: false
execute:
  freeze: auto
editor: source
include-after-body: ../assets/footer.html
---

```{r}
#| echo: FALSE

knitr::opts_knit$set(root.dir = "../../Clase 3 - Tidyverse avanzado y visualizacion/")

```

# 1. Repaso guía práctica 2 (y gráfico de columnas)

a) Retomemos el cuarto ejercicio de la guía 2 y hagamos un simple gráfico de columnas con los datos agrupados:

```{r}
library(tidyverse)
library(readxl)

sipa <- read_csv("bases/base_sipa.csv")
regiones <- read_csv("bases/regiones_arg.csv")

sipa <- sipa %>%
  mutate(Periodo = as.Date(Periodo)) %>% 
  filter(Variable == "Asalariados registrados en el sector privado") %>% 
  mutate(Geografia = str_replace_all(Geografia, "TUCUMÁN", "TUCUMAN"))

sipa_regiones_group_by <- sipa %>%
  left_join(regiones, by = "Geografia") %>%
  group_by(Region) %>% 
  summarize(remuneracion_promedio = mean(Valor) * 1000)

ggplot(sipa_regiones_group_by, aes(x = Region, y = remuneracion_promedio)) +
  geom_col()
```
b) Prueben usar `fill = "steelblue"` como argumento de la capa `geom_col`. Y si les salió el gráfico con los números en notación científica, prueben cambiar configuración global de R con `options(scipen = 999)`.

```{r}
#| eval: FALSE

options(scipen = 999)

ggplot(sipa_regiones_group_by, aes(x = Region, y = remuneracion_promedio)) +
  geom_col(fill = "steelblue")
```


# 2. Visualización básica (gráfico de dispersión)

a) Carguen el paquete `gapminder`, conserven únicamente los datos del 2007

```{r}
library(gapminder)  
library(ggplot2)    

gapminder_2007 <- gapminder %>% filter(year == 2007)

ggplot(gapminder_2007, aes(x = gdpPercap, y = lifeExp)) +
  geom_point() +  
  labs(
    title = "Esperanza de vida vs. PBI per Capita (2007)",
    x = "PBI per Capita (dólares ajustados por inflación)",
    y = "Esperanza de vida (en años)"
  ) +
  theme_classic()
```
b) Probemos aplicar una escala logarítmica en base 10 al eje horizontal, el correspondiente al PBI per cápita (PISTA: usen `scale_x_log10()` como una capa más).

```{r}

library(gapminder)  
library(ggplot2)    

gapminder_2007 <- gapminder %>% filter(year == 2007)

ggplot(gapminder_2007, aes(x = gdpPercap, y = lifeExp)) +
  geom_point() +  
  labs(
    title = "Esperanza de vida vs. PBI per Capita (2007)",
    x = "PBI per Capita (en escala logarítmica)",
    y = "Esperanza de vida (en años)"
  ) +
  scale_x_log10() +  # Escala logarítmica para el PBI
  theme_classic()
```



# 3. group_by() %>% ggplot()

a) Enganchen un group_by() con un summarize() para hacer un gráfico de columnas del peso promedio de cada especie de pingüino del dataset del paquete `palmerpenguins`. Agreguemos etiquetas con la capa `labs()` y la capa adicional de tema `theme_classic()`.

```{r}
library(palmerpenguins)
library(tidyverse)

peso_pinguinos <- penguins %>%
  group_by(species) %>%
  summarize(peso_promedio = mean(body_mass_g, na.rm = TRUE))

ggplot(peso_pinguinos, aes(x = species, y = peso_promedio, fill = species)) +
  geom_col() +
  labs(
    title = "Peso promedio por especie de pingüino",
    x = "Especie",
    y = "Peso promedio de los pingüinos (gr.)",
    fill = "Species"
  ) +
  theme_classic()

```

# 4. Gráfico de líneas

a) Carguen el paquete `gapminder` y grafiquen la evolución de alguna de las variables de la base de datos de alguno de los países (por ejemplo, el PBI per cápita en dólares ajustados por la inflación (la variable `gdpPercap` del dataset) de China). Busquen inspiración en internet, con algún motor de búsqueda, y denle algún toque personal al gráfico (por ejemplo, https://r-graph-gallery.com/line-chart-ggplot2.html). Si se animan, pueden compartir su gráfico por nuestros grupos de WhatsApp y/o Slack.



